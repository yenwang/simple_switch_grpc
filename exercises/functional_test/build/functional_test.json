{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["tmp", 32, false],
        ["tmp_0", 32, false],
        ["tmp_1", 32, false],
        ["tmp_2", 32, false],
        ["tmp_3", 32, false],
        ["metadata.collect", 48, false],
        ["metadata.switch_type", 2, false],
        ["metadata.switch_id", 8, false],
        ["metadata.outport_counter", 32, false],
        ["metadata.decayed_time", 48, false],
        ["metadata.outport_util", 32, false],
        ["_padding_0", 6, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["clone_spec", 32, false],
        ["instance_type", 32, false],
        ["drop", 1, false],
        ["recirculate_port", 16, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["lf_field_list", 32, false],
        ["mcast_grp", 16, false],
        ["resubmit_flag", 32, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["recirculate_flag", 32, false],
        ["parser_error", 32, false],
        ["_padding", 5, false]
      ]
    },
    {
      "name" : "ethernet_t",
      "id" : 2,
      "fields" : [
        ["dstAddr", 48, false],
        ["srcAddr", 48, false],
        ["etherType", 16, false]
      ]
    },
    {
      "name" : "mpath_label_t",
      "id" : 3,
      "fields" : [
        ["up_a_to_c", 8, false],
        ["down_c_to_a", 8, false],
        ["down_a_to_e", 8, false],
        ["down_e_to_h", 8, false],
        ["nextType", 16, false]
      ]
    },
    {
      "name" : "path_info_t",
      "id" : 4,
      "fields" : [
        ["src_edge_id", 8, false],
        ["src_aggregation_id", 8, false],
        ["core_id", 8, false],
        ["dst_aggregation_id", 8, false],
        ["dst_edge_id", 8, false],
        ["max_link_util", 32, false],
        ["nextType", 16, false]
      ]
    },
    {
      "name" : "ipv4_t",
      "id" : 5,
      "fields" : [
        ["version", 4, false],
        ["ihl", 4, false],
        ["diffserv", 8, false],
        ["totalLen", 16, false],
        ["identification", 16, false],
        ["flags", 3, false],
        ["fragOffset", 13, false],
        ["ttl", 8, false],
        ["protocol", 8, false],
        ["hdrChecksum", 16, false],
        ["srcAddr", 32, false],
        ["dstAddr", 32, false]
      ]
    },
    {
      "name" : "tcp_t",
      "id" : 6,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["seqNo", 32, false],
        ["ackNo", 32, false],
        ["dataOffset", 4, false],
        ["res", 4, false],
        ["flags", 8, false],
        ["window", 16, false],
        ["checksum", 16, false],
        ["urgentPtr", 16, false]
      ]
    },
    {
      "name" : "udp_t",
      "id" : 7,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["length_", 16, false],
        ["checksum", 16, false]
      ]
    },
    {
      "name" : "packet_in_header_t",
      "id" : 8,
      "fields" : [
        ["ingress_port", 9, false],
        ["padding", 7, false]
      ]
    },
    {
      "name" : "packet_out_header_t",
      "id" : 9,
      "fields" : [
        ["egress_port", 9, false],
        ["mcast", 16, false],
        ["srcAddr", 48, false],
        ["dstAddr", 48, false],
        ["padding", 7, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "ethernet",
      "id" : 2,
      "header_type" : "ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "mpath_label",
      "id" : 3,
      "header_type" : "mpath_label_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "path_info",
      "id" : 4,
      "header_type" : "path_info_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4",
      "id" : 5,
      "header_type" : "ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "tcp",
      "id" : 6,
      "header_type" : "tcp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "udp",
      "id" : 7,
      "header_type" : "udp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "packet_in",
      "id" : 8,
      "header_type" : "packet_in_header_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "packet_out",
      "id" : 9,
      "header_type" : "packet_out_header_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [],
  "errors" : [
    ["NoError", 1],
    ["PacketTooShort", 2],
    ["NoMatch", 3],
    ["StackOutOfBounds", 4],
    ["HeaderTooShort", 5],
    ["ParserTimeout", 6]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x00ff",
              "mask" : null,
              "next_state" : "parse_packet_out"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : "parse_ethernet"
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ]
        },
        {
          "name" : "parse_packet_out",
          "id" : 1,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "packet_out"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "value" : "default",
              "mask" : null,
              "next_state" : "parse_ethernet"
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_ethernet",
          "id" : 2,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ethernet"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "type" : "hexstr",
              "value" : "0x0805",
              "mask" : null,
              "next_state" : "parse_mpath_label"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            }
          ]
        },
        {
          "name" : "parse_mpath_label",
          "id" : 3,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "mpath_label"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "type" : "hexstr",
              "value" : "0x8080",
              "mask" : null,
              "next_state" : "parse_path_info"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["mpath_label", "nextType"]
            }
          ]
        },
        {
          "name" : "parse_path_info",
          "id" : 4,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "path_info"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["path_info", "nextType"]
            }
          ]
        },
        {
          "name" : "parse_ipv4",
          "id" : 5,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x06",
              "mask" : null,
              "next_state" : "parse_tcp"
            },
            {
              "type" : "hexstr",
              "value" : "0x11",
              "mask" : null,
              "next_state" : "parse_udp"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ]
        },
        {
          "name" : "parse_tcp",
          "id" : 6,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "tcp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_udp",
          "id" : 7,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "udp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "functional_test.p4",
        "line" : 464,
        "column" : 8,
        "source_fragment" : "MyDeparser"
      },
      "order" : ["packet_in", "ethernet", "mpath_label", "path_info", "ipv4", "tcp", "udp"]
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [],
  "register_arrays" : [
    {
      "name" : "collect_register",
      "id" : 0,
      "source_info" : {
        "filename" : "functional_test.p4",
        "line" : 14,
        "column" : 32,
        "source_fragment" : "collect_register"
      },
      "size" : 1,
      "bitwidth" : 48
    },
    {
      "name" : "switch_type_register",
      "id" : 1,
      "source_info" : {
        "filename" : "functional_test.p4",
        "line" : 15,
        "column" : 31,
        "source_fragment" : "switch_type_register"
      },
      "size" : 1,
      "bitwidth" : 2
    },
    {
      "name" : "switch_id_register",
      "id" : 2,
      "source_info" : {
        "filename" : "functional_test.p4",
        "line" : 16,
        "column" : 31,
        "source_fragment" : "switch_id_register"
      },
      "size" : 1,
      "bitwidth" : 8
    },
    {
      "name" : "outport_counter_register",
      "id" : 3,
      "source_info" : {
        "filename" : "functional_test.p4",
        "line" : 17,
        "column" : 29,
        "source_fragment" : "outport_counter_register"
      },
      "size" : 4,
      "bitwidth" : 32
    },
    {
      "name" : "decayed_time_register",
      "id" : 4,
      "source_info" : {
        "filename" : "functional_test.p4",
        "line" : 18,
        "column" : 29,
        "source_fragment" : "decayed_time_register"
      },
      "size" : 4,
      "bitwidth" : 48
    },
    {
      "name" : "outport_util_register",
      "id" : 5,
      "source_info" : {
        "filename" : "functional_test.p4",
        "line" : 19,
        "column" : 29,
        "source_fragment" : "outport_util_register"
      },
      "size" : 4,
      "bitwidth" : 32
    }
  ],
  "calculations" : [
    {
      "name" : "calc",
      "id" : 0,
      "algo" : "crc16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "srcPort"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "dstPort"]
        }
      ]
    },
    {
      "name" : "calc_0",
      "id" : 1,
      "algo" : "crc32",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "srcPort"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "dstPort"]
        }
      ]
    },
    {
      "name" : "calc_1",
      "id" : 2,
      "algo" : "crc16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["udp", "srcPort"]
        },
        {
          "type" : "field",
          "value" : ["udp", "dstPort"]
        }
      ]
    },
    {
      "name" : "calc_2",
      "id" : 3,
      "algo" : "crc32",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["udp", "srcPort"]
        },
        {
          "type" : "field",
          "value" : ["udp", "dstPort"]
        }
      ]
    },
    {
      "name" : "calc_3",
      "id" : 4,
      "source_info" : {
        "filename" : "functional_test.p4",
        "line" : 441,
        "column" : 1,
        "source_fragment" : "update_checksum( ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "version"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ihl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "diffserv"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "totalLen"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "identification"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "flags"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "fragOffset"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ttl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        }
      ]
    }
  ],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "NoAction",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "MyIngress.send_to_cpu",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00ff"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 11,
            "column" : 24,
            "source_fragment" : "255; //I specify 255 for cpu port while running simple_switch_grpc with command --cpu-port 255 ..."
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "packet_in"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 211,
            "column" : 1,
            "source_fragment" : "hdr.packet_in.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["packet_in", "ingress_port"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 212,
            "column" : 1,
            "source_fragment" : "hdr.packet_in.ingress_port = standard_metadata.ingress_port"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.send_to_cpu",
      "id" : 2,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00ff"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 11,
            "column" : 24,
            "source_fragment" : "255; //I specify 255 for cpu port while running simple_switch_grpc with command --cpu-port 255 ..."
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "packet_in"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 211,
            "column" : 1,
            "source_fragment" : "hdr.packet_in.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["packet_in", "ingress_port"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 212,
            "column" : 1,
            "source_fragment" : "hdr.packet_in.ingress_port = standard_metadata.ingress_port"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.drop",
      "id" : 3,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "drop",
          "parameters" : [],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 216,
            "column" : 1,
            "source_fragment" : "mark_to_drop()"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.drop",
      "id" : 4,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "drop",
          "parameters" : [],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 216,
            "column" : 1,
            "source_fragment" : "mark_to_drop()"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.normal_forward",
      "id" : 5,
      "runtime_data" : [
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 220,
            "column" : 1,
            "source_fragment" : "standard_metadata.egress_spec = port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ttl"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "ttl"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 221,
            "column" : 1,
            "source_fragment" : "hdr.ipv4.ttl = hdr.ipv4.ttl - 1"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.normal_forward",
      "id" : 6,
      "runtime_data" : [
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 220,
            "column" : 1,
            "source_fragment" : "standard_metadata.egress_spec = port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ttl"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "ttl"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 221,
            "column" : 1,
            "source_fragment" : "hdr.ipv4.ttl = hdr.ipv4.ttl - 1"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.push_mpath_label_tcp",
      "id" : 7,
      "runtime_data" : [
        {
          "name" : "down_c_to_a",
          "bitwidth" : 8
        },
        {
          "name" : "down_a_to_e",
          "bitwidth" : 8
        },
        {
          "name" : "down_e_to_h",
          "bitwidth" : 8
        }
      ],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "mpath_label"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 225,
            "column" : 1,
            "source_fragment" : "hdr.mpath_label.setValid()"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0002"
            },
            {
              "type" : "calculation",
              "value" : "calc"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 228,
            "column" : 1,
            "source_fragment" : "hash(standard_metadata.egress_spec, ..."
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mpath_label", "up_a_to_c"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0002"
            },
            {
              "type" : "calculation",
              "value" : "calc_0"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 238,
            "column" : 8,
            "source_fragment" : "hash(hdr.mpath_label.up_a_to_c, ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mpath_label", "down_c_to_a"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 247,
            "column" : 1,
            "source_fragment" : "hdr.mpath_label.down_c_to_a = down_c_to_a"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mpath_label", "down_a_to_e"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 248,
            "column" : 1,
            "source_fragment" : "hdr.mpath_label.down_a_to_e = down_a_to_e"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mpath_label", "down_e_to_h"]
            },
            {
              "type" : "runtime_data",
              "value" : 2
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 249,
            "column" : 1,
            "source_fragment" : "hdr.mpath_label.down_e_to_h = down_e_to_h"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mpath_label", "nextType"]
            },
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 250,
            "column" : 1,
            "source_fragment" : "hdr.mpath_label.nextType = hdr.ethernet.etherType"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0805"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 5,
            "column" : 33,
            "source_fragment" : "0x0805; //randomly choose one private unused ether_type to represent the existence of Mpath_label header ..."
          }
        }
      ]
    },
    {
      "name" : "MyIngress.push_mpath_label_udp",
      "id" : 8,
      "runtime_data" : [
        {
          "name" : "down_c_to_a",
          "bitwidth" : 8
        },
        {
          "name" : "down_a_to_e",
          "bitwidth" : 8
        },
        {
          "name" : "down_e_to_h",
          "bitwidth" : 8
        }
      ],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "mpath_label"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 255,
            "column" : 1,
            "source_fragment" : "hdr.mpath_label.setValid()"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0002"
            },
            {
              "type" : "calculation",
              "value" : "calc_1"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 258,
            "column" : 8,
            "source_fragment" : "hash(standard_metadata.egress_spec, ..."
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mpath_label", "up_a_to_c"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0002"
            },
            {
              "type" : "calculation",
              "value" : "calc_2"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 268,
            "column" : 8,
            "source_fragment" : "hash(hdr.mpath_label.up_a_to_c, ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mpath_label", "down_c_to_a"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 277,
            "column" : 1,
            "source_fragment" : "hdr.mpath_label.down_c_to_a = down_c_to_a"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mpath_label", "down_a_to_e"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 278,
            "column" : 1,
            "source_fragment" : "hdr.mpath_label.down_a_to_e = down_a_to_e"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mpath_label", "down_e_to_h"]
            },
            {
              "type" : "runtime_data",
              "value" : 2
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 279,
            "column" : 1,
            "source_fragment" : "hdr.mpath_label.down_e_to_h = down_e_to_h"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mpath_label", "nextType"]
            },
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 280,
            "column" : 1,
            "source_fragment" : "hdr.mpath_label.nextType = hdr.ethernet.etherType"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0805"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 5,
            "column" : 33,
            "source_fragment" : "0x0805; //randomly choose one private unused ether_type to represent the existence of Mpath_label header ..."
          }
        }
      ]
    },
    {
      "name" : "act",
      "id" : 9,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["packet_out", "egress_port"]
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 326,
            "column" : 2,
            "source_fragment" : "standard_metadata.egress_spec = hdr.packet_out.egress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "mcast_grp"]
            },
            {
              "type" : "field",
              "value" : ["packet_out", "mcast"]
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 327,
            "column" : 2,
            "source_fragment" : "standard_metadata.mcast_grp = hdr.packet_out.mcast"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "srcAddr"]
            },
            {
              "type" : "field",
              "value" : ["packet_out", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 328,
            "column" : 2,
            "source_fragment" : "hdr.ethernet.srcAddr = hdr.packet_out.srcAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            },
            {
              "type" : "field",
              "value" : ["packet_out", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 329,
            "column" : 2,
            "source_fragment" : "hdr.ethernet.dstAddr = hdr.packet_out.dstAddr"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "packet_out"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 330,
            "column" : 2,
            "source_fragment" : "hdr.packet_out.setInvalid()"
          }
        }
      ]
    },
    {
      "name" : "act_0",
      "id" : 10,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["mpath_label", "down_e_to_h"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01ff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 339,
            "column" : 3,
            "source_fragment" : "standard_metadata.egress_spec = (bit<9>) hdr.mpath_label.down_e_to_h"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "mpath_label"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 340,
            "column" : 3,
            "source_fragment" : "hdr.mpath_label.setInvalid()"
          }
        }
      ]
    },
    {
      "name" : "act_1",
      "id" : 11,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["mpath_label", "up_a_to_c"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01ff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 344,
            "column" : 7,
            "source_fragment" : "standard_metadata.egress_spec = (bit<9>) hdr.mpath_label.up_a_to_c"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mpath_label", "up_a_to_c"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 345,
            "column" : 7,
            "source_fragment" : "hdr.mpath_label.up_a_to_c = 0"
          }
        }
      ]
    },
    {
      "name" : "act_2",
      "id" : 12,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["mpath_label", "down_a_to_e"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01ff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 348,
            "column" : 7,
            "source_fragment" : "standard_metadata.egress_spec = (bit<9>) hdr.mpath_label.down_a_to_e"
          }
        }
      ]
    },
    {
      "name" : "act_3",
      "id" : 13,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["mpath_label", "down_c_to_a"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01ff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 352,
            "column" : 3,
            "source_fragment" : "standard_metadata.egress_spec = (bit<9>) hdr.mpath_label.down_c_to_a"
          }
        }
      ]
    },
    {
      "name" : "act_4",
      "id" : 14,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "path_info"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 358,
            "column" : 3,
            "source_fragment" : "hdr.path_info.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["path_info", "nextType"]
            },
            {
              "type" : "field",
              "value" : ["mpath_label", "nextType"]
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 359,
            "column" : 3,
            "source_fragment" : "hdr.path_info.nextType = hdr.mpath_label.nextType"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mpath_label", "nextType"]
            },
            {
              "type" : "hexstr",
              "value" : "0x8080"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 6,
            "column" : 31,
            "source_fragment" : "0x8080; //randomly choose one private unused ether_type to represent the existence of PATH_INFO header ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["path_info", "src_edge_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 361,
            "column" : 3,
            "source_fragment" : "hdr.path_info.src_edge_id = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["path_info", "src_aggregation_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 362,
            "column" : 3,
            "source_fragment" : "hdr.path_info.src_aggregation_id = 0"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "collect_register"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_global_timestamp"]
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 363,
            "column" : 3,
            "source_fragment" : "collect_register.write((bit<32>) 0, standard_metadata.ingress_global_timestamp)"
          }
        }
      ]
    },
    {
      "name" : "act_5",
      "id" : 15,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "path_info"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 369,
            "column" : 3,
            "source_fragment" : "hdr.path_info.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["path_info", "nextType"]
            },
            {
              "type" : "field",
              "value" : ["mpath_label", "nextType"]
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 370,
            "column" : 3,
            "source_fragment" : "hdr.path_info.nextType = hdr.mpath_label.nextType"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mpath_label", "nextType"]
            },
            {
              "type" : "hexstr",
              "value" : "0x8080"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 6,
            "column" : 31,
            "source_fragment" : "0x8080; //randomly choose one private unused ether_type to represent the existence of PATH_INFO header ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["path_info", "src_edge_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 372,
            "column" : 3,
            "source_fragment" : "hdr.path_info.src_edge_id = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["path_info", "src_aggregation_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 373,
            "column" : 3,
            "source_fragment" : "hdr.path_info.src_aggregation_id = 0"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "collect_register"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_global_timestamp"]
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 374,
            "column" : 3,
            "source_fragment" : "collect_register.write((bit<32>) 0, standard_metadata.ingress_global_timestamp)"
          }
        }
      ]
    },
    {
      "name" : "act_6",
      "id" : 16,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.switch_type"]
            },
            {
              "type" : "register_array",
              "value" : "switch_type_register"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 333,
            "column" : 2,
            "source_fragment" : "switch_type_register.read(meta.switch_type, (bit<32>) 0)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.collect"]
            },
            {
              "type" : "register_array",
              "value" : "collect_register"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 334,
            "column" : 2,
            "source_fragment" : "collect_register.read(meta.collect, (bit<32>) 0)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.switch_id"]
            },
            {
              "type" : "register_array",
              "value" : "switch_id_register"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 335,
            "column" : 2,
            "source_fragment" : "switch_id_register.read(meta.switch_id, (bit<32>) 0)"
          }
        }
      ]
    },
    {
      "name" : "act_7",
      "id" : 17,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["path_info", "src_edge_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.switch_id"]
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 398,
            "column" : 6,
            "source_fragment" : "hdr.path_info.src_edge_id = meta.switch_id"
          }
        }
      ]
    },
    {
      "name" : "act_8",
      "id" : 18,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "path_info"
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 402,
            "column" : 6,
            "source_fragment" : "hdr.path_info.setInvalid()"
          }
        }
      ]
    },
    {
      "name" : "act_9",
      "id" : 19,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["path_info", "src_aggregation_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.switch_id"]
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 408,
            "column" : 6,
            "source_fragment" : "hdr.path_info.src_aggregation_id = meta.switch_id"
          }
        }
      ]
    },
    {
      "name" : "act_10",
      "id" : 20,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["path_info", "dst_aggregation_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.switch_id"]
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 411,
            "column" : 6,
            "source_fragment" : "hdr.path_info.dst_aggregation_id = meta.switch_id"
          }
        }
      ]
    },
    {
      "name" : "act_11",
      "id" : 21,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["path_info", "core_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.switch_id"]
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 415,
            "column" : 2,
            "source_fragment" : "hdr.path_info.core_id = meta.switch_id"
          }
        }
      ]
    },
    {
      "name" : "act_12",
      "id" : 22,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["path_info", "max_link_util"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.outport_util"]
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 418,
            "column" : 2,
            "source_fragment" : "hdr.path_info.max_link_util = meta.outport_util"
          }
        }
      ]
    },
    {
      "name" : "act_13",
      "id" : 23,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 391,
            "column" : 47,
            "source_fragment" : "(bit<32>) standard_metadata.egress_port"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.decayed_time"]
            },
            {
              "type" : "register_array",
              "value" : "decayed_time_register"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 391,
            "column" : 1,
            "source_fragment" : "decayed_time_register.read(meta.decayed_time, (bit<32>) standard_metadata.egress_port)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 392,
            "column" : 53,
            "source_fragment" : "(bit<32>) standard_metadata.egress_port"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.outport_counter"]
            },
            {
              "type" : "register_array",
              "value" : "outport_counter_register"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 392,
            "column" : 1,
            "source_fragment" : "outport_counter_register.read(meta.outport_counter, (bit<32>) standard_metadata.egress_port)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 393,
            "column" : 47,
            "source_fragment" : "(bit<32>) standard_metadata.egress_port"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.outport_util"]
            },
            {
              "type" : "register_array",
              "value" : "outport_util_register"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_1"]
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 393,
            "column" : 1,
            "source_fragment" : "outport_util_register.read(meta.outport_util, (bit<32>) standard_metadata.egress_port)"
          }
        }
      ]
    },
    {
      "name" : "act_14",
      "id" : 24,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.outport_counter"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : ">>",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "metadata.outport_counter"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x1"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 423,
            "column" : 5,
            "source_fragment" : "meta.outport_counter = meta.outport_counter >> 1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.outport_counter"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "metadata.outport_counter"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "packet_length"]
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 424,
            "column" : 5,
            "source_fragment" : "meta.outport_counter = meta.outport_counter + standard_metadata.packet_length"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 426,
            "column" : 36,
            "source_fragment" : "(bit<32>) standard_metadata.egress_port"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "outport_counter_register"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.outport_counter"]
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 426,
            "column" : 5,
            "source_fragment" : "outport_counter_register.write((bit<32>) standard_metadata.egress_port, meta.outport_counter)"
          }
        }
      ]
    },
    {
      "name" : "act_15",
      "id" : 25,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.outport_counter"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "metadata.outport_counter"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "packet_length"]
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 429,
            "column" : 5,
            "source_fragment" : "meta.outport_counter = meta.outport_counter + standard_metadata.packet_length"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 430,
            "column" : 36,
            "source_fragment" : "(bit<32>) standard_metadata.egress_port"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "outport_counter_register"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "metadata.outport_counter"]
            }
          ],
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 430,
            "column" : 5,
            "source_fragment" : "outport_counter_register.write((bit<32>) standard_metadata.egress_port, meta.outport_counter)"
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "functional_test.p4",
        "line" : 205,
        "column" : 8,
        "source_fragment" : "MyIngress"
      },
      "init_table" : "node_2",
      "tables" : [
        {
          "name" : "MyIngress.debug_table",
          "id" : 0,
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 314,
            "column" : 10,
            "source_fragment" : "debug_table"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.packet_out.egress_port",
              "target" : ["packet_out", "egress_port"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [0],
          "actions" : ["NoAction"],
          "base_default_next" : "tbl_act",
          "next_tables" : {
            "NoAction" : "tbl_act"
          },
          "default_entry" : {
            "action_id" : 0,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_act",
          "id" : 1,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [9],
          "actions" : ["act"],
          "base_default_next" : null,
          "next_tables" : {
            "act" : null
          },
          "default_entry" : {
            "action_id" : 9,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_0",
          "id" : 2,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [16],
          "actions" : ["act_6"],
          "base_default_next" : "node_6",
          "next_tables" : {
            "act_6" : "node_6"
          },
          "default_entry" : {
            "action_id" : 16,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_1",
          "id" : 3,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [10],
          "actions" : ["act_0"],
          "base_default_next" : null,
          "next_tables" : {
            "act_0" : null
          },
          "default_entry" : {
            "action_id" : 10,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_2",
          "id" : 4,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [11],
          "actions" : ["act_1"],
          "base_default_next" : null,
          "next_tables" : {
            "act_1" : null
          },
          "default_entry" : {
            "action_id" : 11,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_3",
          "id" : 5,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [12],
          "actions" : ["act_2"],
          "base_default_next" : null,
          "next_tables" : {
            "act_2" : null
          },
          "default_entry" : {
            "action_id" : 12,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_4",
          "id" : 6,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [13],
          "actions" : ["act_3"],
          "base_default_next" : null,
          "next_tables" : {
            "act_3" : null
          },
          "default_entry" : {
            "action_id" : 13,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.tcp_processing",
          "id" : 7,
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 286,
            "column" : 10,
            "source_fragment" : "tcp_processing"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.dstAddr",
              "target" : ["ipv4", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [7, 5, 3, 1],
          "actions" : ["MyIngress.push_mpath_label_tcp", "MyIngress.normal_forward", "MyIngress.drop", "MyIngress.send_to_cpu"],
          "base_default_next" : "node_17",
          "next_tables" : {
            "MyIngress.push_mpath_label_tcp" : "node_17",
            "MyIngress.normal_forward" : "node_17",
            "MyIngress.drop" : "node_17",
            "MyIngress.send_to_cpu" : "node_17"
          },
          "default_entry" : {
            "action_id" : 3,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_act_5",
          "id" : 8,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [14],
          "actions" : ["act_4"],
          "base_default_next" : null,
          "next_tables" : {
            "act_4" : null
          },
          "default_entry" : {
            "action_id" : 14,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.udp_processing",
          "id" : 9,
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 300,
            "column" : 10,
            "source_fragment" : "udp_processing"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.dstAddr",
              "target" : ["ipv4", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [8, 6, 4, 2],
          "actions" : ["MyIngress.push_mpath_label_udp", "MyIngress.normal_forward", "MyIngress.drop", "MyIngress.send_to_cpu"],
          "base_default_next" : "node_21",
          "next_tables" : {
            "MyIngress.push_mpath_label_udp" : "node_21",
            "MyIngress.normal_forward" : "node_21",
            "MyIngress.drop" : "node_21",
            "MyIngress.send_to_cpu" : "node_21"
          },
          "default_entry" : {
            "action_id" : 4,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_act_6",
          "id" : 10,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [15],
          "actions" : ["act_5"],
          "base_default_next" : null,
          "next_tables" : {
            "act_5" : null
          },
          "default_entry" : {
            "action_id" : 15,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_2",
          "id" : 0,
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 324,
            "column" : 8,
            "source_fragment" : "standard_metadata.ingress_port == CPU_PORT"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["standard_metadata", "ingress_port"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00ff"
              }
            }
          },
          "true_next" : "MyIngress.debug_table",
          "false_next" : "tbl_act_0"
        },
        {
          "name" : "node_6",
          "id" : 1,
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 336,
            "column" : 5,
            "source_fragment" : "hdr.mpath_label.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["mpath_label", "$valid$"]
              }
            }
          },
          "true_next" : "node_7",
          "false_next" : "node_15"
        },
        {
          "name" : "node_7",
          "id" : 2,
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 338,
            "column" : 9,
            "source_fragment" : "meta.switch_id == 0"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata.switch_id"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00"
              }
            }
          },
          "true_next" : "tbl_act_1",
          "false_next" : "node_9"
        },
        {
          "name" : "node_9",
          "id" : 3,
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 342,
            "column" : 14,
            "source_fragment" : "meta.switch_id == 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata.switch_id"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "node_10",
          "false_next" : "node_13"
        },
        {
          "name" : "node_10",
          "id" : 4,
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 343,
            "column" : 6,
            "source_fragment" : "hdr.mpath_label.up_a_to_c != 0"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "!=",
              "left" : {
                "type" : "field",
                "value" : ["mpath_label", "up_a_to_c"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00"
              }
            }
          },
          "true_next" : "tbl_act_2",
          "false_next" : "tbl_act_3"
        },
        {
          "name" : "node_13",
          "id" : 5,
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 351,
            "column" : 14,
            "source_fragment" : "meta.switch_id == 2"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata.switch_id"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x02"
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_act_4"
        },
        {
          "name" : "node_15",
          "id" : 6,
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 355,
            "column" : 10,
            "source_fragment" : "hdr.tcp.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["tcp", "$valid$"]
              }
            }
          },
          "true_next" : "MyIngress.tcp_processing",
          "false_next" : "node_19"
        },
        {
          "name" : "node_17",
          "id" : 7,
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 357,
            "column" : 9,
            "source_fragment" : "standard_metadata.ingress_global_timestamp - meta.collect >= 1000000"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : ">=",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "-",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "metadata.collect"]
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffff"
                  }
                }
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x0000000f4240"
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_act_5"
        },
        {
          "name" : "node_19",
          "id" : 8,
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 366,
            "column" : 10,
            "source_fragment" : "hdr.udp.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["udp", "$valid$"]
              }
            }
          },
          "false_next" : null,
          "true_next" : "MyIngress.udp_processing"
        },
        {
          "name" : "node_21",
          "id" : 9,
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 368,
            "column" : 9,
            "source_fragment" : "standard_metadata.ingress_global_timestamp - meta.collect >= 1000000"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : ">=",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "-",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "metadata.collect"]
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffff"
                  }
                }
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x0000000f4240"
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_act_6"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "functional_test.p4",
        "line" : 387,
        "column" : 8,
        "source_fragment" : "MyEgress"
      },
      "init_table" : "tbl_act_7",
      "tables" : [
        {
          "name" : "tbl_act_7",
          "id" : 11,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [23],
          "actions" : ["act_13"],
          "base_default_next" : "node_26",
          "next_tables" : {
            "act_13" : "node_26"
          },
          "default_entry" : {
            "action_id" : 23,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_8",
          "id" : 12,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [17],
          "actions" : ["act_7"],
          "base_default_next" : "node_37",
          "next_tables" : {
            "act_7" : "node_37"
          },
          "default_entry" : {
            "action_id" : 17,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_9",
          "id" : 13,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [18],
          "actions" : ["act_8"],
          "base_default_next" : "node_37",
          "next_tables" : {
            "act_8" : "node_37"
          },
          "default_entry" : {
            "action_id" : 18,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_10",
          "id" : 14,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [19],
          "actions" : ["act_9"],
          "base_default_next" : "node_37",
          "next_tables" : {
            "act_9" : "node_37"
          },
          "default_entry" : {
            "action_id" : 19,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_11",
          "id" : 15,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [20],
          "actions" : ["act_10"],
          "base_default_next" : "node_37",
          "next_tables" : {
            "act_10" : "node_37"
          },
          "default_entry" : {
            "action_id" : 20,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_12",
          "id" : 16,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [21],
          "actions" : ["act_11"],
          "base_default_next" : "node_37",
          "next_tables" : {
            "act_11" : "node_37"
          },
          "default_entry" : {
            "action_id" : 21,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_13",
          "id" : 17,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [22],
          "actions" : ["act_12"],
          "base_default_next" : "node_39",
          "next_tables" : {
            "act_12" : "node_39"
          },
          "default_entry" : {
            "action_id" : 22,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_14",
          "id" : 18,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [24],
          "actions" : ["act_14"],
          "base_default_next" : null,
          "next_tables" : {
            "act_14" : null
          },
          "default_entry" : {
            "action_id" : 24,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_15",
          "id" : 19,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [25],
          "actions" : ["act_15"],
          "base_default_next" : null,
          "next_tables" : {
            "act_15" : null
          },
          "default_entry" : {
            "action_id" : 25,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_26",
          "id" : 10,
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 394,
            "column" : 4,
            "source_fragment" : "hdr.path_info.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["path_info", "$valid$"]
              }
            }
          },
          "true_next" : "node_27",
          "false_next" : "node_39"
        },
        {
          "name" : "node_27",
          "id" : 11,
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 396,
            "column" : 8,
            "source_fragment" : "meta.switch_id == 0"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata.switch_id"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00"
              }
            }
          },
          "true_next" : "node_28",
          "false_next" : "node_31"
        },
        {
          "name" : "node_28",
          "id" : 12,
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 397,
            "column" : 5,
            "source_fragment" : "hdr.path_info.src_edge_id == 0"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["path_info", "src_edge_id"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00"
              }
            }
          },
          "true_next" : "tbl_act_8",
          "false_next" : "tbl_act_9"
        },
        {
          "name" : "node_31",
          "id" : 13,
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 406,
            "column" : 13,
            "source_fragment" : "meta.switch_id == 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata.switch_id"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "node_32",
          "false_next" : "node_35"
        },
        {
          "name" : "node_32",
          "id" : 14,
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 407,
            "column" : 5,
            "source_fragment" : "hdr.path_info.src_aggregation_id == 0"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["path_info", "src_aggregation_id"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00"
              }
            }
          },
          "true_next" : "tbl_act_10",
          "false_next" : "tbl_act_11"
        },
        {
          "name" : "node_35",
          "id" : 15,
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 414,
            "column" : 13,
            "source_fragment" : "meta.switch_id == 2"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata.switch_id"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x02"
              }
            }
          },
          "true_next" : "tbl_act_12",
          "false_next" : "node_37"
        },
        {
          "name" : "node_37",
          "id" : 16,
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 417,
            "column" : 8,
            "source_fragment" : "meta.outport_util > hdr.path_info.max_link_util"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : ">",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata.outport_util"]
              },
              "right" : {
                "type" : "field",
                "value" : ["path_info", "max_link_util"]
              }
            }
          },
          "true_next" : "tbl_act_13",
          "false_next" : "node_39"
        },
        {
          "name" : "node_39",
          "id" : 17,
          "source_info" : {
            "filename" : "functional_test.p4",
            "line" : 422,
            "column" : 4,
            "source_fragment" : "standard_metadata.egress_global_timestamp - meta.decayed_time >= 1000000"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : ">=",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "-",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "egress_global_timestamp"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "metadata.decayed_time"]
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffff"
                  }
                }
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x0000000f4240"
              }
            }
          },
          "true_next" : "tbl_act_14",
          "false_next" : "tbl_act_15"
        }
      ]
    }
  ],
  "checksums" : [
    {
      "name" : "cksum",
      "id" : 0,
      "source_info" : {
        "filename" : "functional_test.p4",
        "line" : 441,
        "column" : 1,
        "source_fragment" : "update_checksum( ..."
      },
      "target" : ["ipv4", "hdrChecksum"],
      "type" : "generic",
      "calculation" : "calc_3",
      "if_cond" : {
        "type" : "expression",
        "value" : {
          "op" : "d2b",
          "left" : null,
          "right" : {
            "type" : "field",
            "value" : ["ipv4", "$valid$"]
          }
        }
      }
    }
  ],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.lf_field_list",
      ["standard_metadata", "lf_field_list"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.resubmit_flag",
      ["standard_metadata", "resubmit_flag"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.recirculate_flag",
      ["standard_metadata", "recirculate_flag"]
    ]
  ],
  "program" : "functional_test.p4",
  "__meta__" : {
    "version" : [2, 18],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}